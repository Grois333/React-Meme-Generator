{"ast":null,"code":"var _jsxFileName = \"/home/isaac/Documents/Developers Institute/Teaching/MINI PROJECTS/4 - NPM, REACT/meme/src/MemeGenerator.js\";\nimport React, { Component } from 'react';\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemesImgs: []\n    };\n  } //Getting Data with lifecycle\n\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const memes = response.data.memes;\n      console.log(memes[0]);\n      this.setState({\n        allMemesImgs: memes\n      });\n    });\n  }\n\n  render() {\n    return (// <h1>MEME GENERATOR SECTION</h1>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"meme-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Gen\")))\n    );\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/home/isaac/Documents/Developers Institute/Teaching/MINI PROJECTS/4 - NPM, REACT/meme/src/MemeGenerator.js"],"names":["React","Component","MemeGenerator","constructor","state","topText","bottomText","randomImg","allMemesImgs","componentDidMount","fetch","then","response","json","memes","data","console","log","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAClCE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,SAAS,EAAE,+BAHF;AAITC,MAAAA,YAAY,EAAE;AAJL,KAAb;AAOH,GAViC,CAYlC;;;AACAC,EAAAA,iBAAiB,GAAE;AAChBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACIC,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESC,QAAQ,IAAI;AAAA,YACPE,KADO,GACEF,QAAQ,CAACG,IADX,CACPD,KADO;AAEdE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAAC,CAAD,CAAjB;AACA,WAAKI,QAAL,CAAc;AAACV,QAAAA,YAAY,EAAEM;AAAf,OAAd;AAEH,KAPJ;AAQF;;AAEGK,EAAAA,MAAM,GAAG;AACL,WACI;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHA,CADJ;AAHJ;AAYH;;AArC6B;;AAuCtC,eAAejB,aAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass MemeGenerator extends Component {\n    constructor() {\n        super()\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\n            allMemesImgs: []\n        }\n\n    }\n\n    //Getting Data with lifecycle\n    componentDidMount(){\n       fetch(\"https://api.imgflip.com/get_memes\")\n          .then(response => response.json())\n          .then(response => {\n              const {memes} = response.data\n              console.log(memes[0]) \n              this.setState({allMemesImgs: memes})\n\n          })\n    }\n\n        render() {\n            return(\n                // <h1>MEME GENERATOR SECTION</h1>\n\n                <div>\n                    <form className=\"meme-form\">\n\n\n                    <button>Gen</button>\n\n                    </form>\n                </div>\n            )\n        }\n}\nexport default MemeGenerator;"]},"metadata":{},"sourceType":"module"}